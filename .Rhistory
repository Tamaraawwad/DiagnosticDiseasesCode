#some data cleaning:
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
diag_2019 <- diag_2019[id_within_baradmission==1]
nrow(diag_2019)
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
nrow(diag_2019)
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
nrow(diag_2019)
decripdiag_2019 <- diag_2019[id_within_baradmission==1]
nrow(decripdiag_2019)
xtabs(~decripdiag_2019$`Patient Sex`)
xtabs(~decripdiag_2019$`Marital Status`)
xtabs(~decripdiag_2019$Organization)
org<-xtabs(~decripdiag_2019$Organization)
openxlsx :: write.xlsx(org,
file.path(org::PROJ$SHARED_TODAY,"2019organization.xlsx"))
xtabs(~decripdiag_2019$`Admission Status`)
xtabs(~decripdiag_2019$`Admission Hosp/Dept Name`)
org/depar <- CrossTable (decripdiag_2019$Organization,decripdiag_2019$`Admission Hosp/Dept Name`,addNA=T)
library(gmodels)
org/depar <- CrossTable (decripdiag_2019$Organization,decripdiag_2019$`Admission Hosp/Dept Name`,addNA=T)
xtabs(~decripdiag_2019$`Admission Hosp/Dept Name`)
unique(decripdiag_2019$`Admission Hosp/Dept Name`)
name(unique(decripdiag_2019$`Admission Hosp/Dept Name`))
names(unique(decripdiag_2019$`Admission Hosp/Dept Name`))
departments<- unique(decripdiag_2019$`Admission Hosp/Dept Name`))
departments <- unique(decripdiag_2019$`Admission Hosp/Dept Name`)
openxlsx :: write.xlsx(departments,
file.path(org::PROJ$SHARED_TODAY,"2019depatrment.xlsx"))
xtabs(~decripdiag_2019$`Admission Type`)
xtabs(~decripdiag_2019$`Medical Order Module`)
xtabs(~decripdiag_2019$`Admission Type`)
xtabs(~decripdiag_2019$`Diagnose Type`)
xtabs(~decripdiag_2019$`Medical Order Note`)
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(`Patient DoB`), units="days"))/365.25]
diag_2019
unique(diag_2019$`Patient DoB`)
diag_2019[,PatientDoB:=as.Date(`Patient DoB`, format="%d-%m-%Y")]
diag_2019[,admissiondate:=as.Date(`Admission Date`, format="%d-%m-%Y")]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(), units="days"))/365.25]
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365.25]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365.25, digits=0]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365.25, round(age,0)]
diag_2019
diag_2019[, age:= round(age, digits=0)]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date(admissiondate), as.Date(PatientDoB), units="days"))/365.25]
diag_2019[, age:= round(age, digits=0)]
diag_2019
diag_2019[,age_cat:=cut(age,
include.lowest=T)]
diag_2019[,age_cat:=cut(age,
breaks = c(0,20,30,40,50,60,100)
,include.lowest=T)]
diag_2019
xtabs(~diag_2019$age_cat)
xtabs(~decripdiag_2019$age_cat)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
library(data.table)
library(gmodels)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
# diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
# diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
# diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
# drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
# drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
# drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
# lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
# lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
# lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
# obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
# obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
# obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels 2019 database
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
diag_2019[,PatientDoB:=as.Date(`Patient DoB`, format="%d-%m-%Y")]
diag_2019[,admissiondate:=as.Date(`Admission Date`, format="%d-%m-%Y")]
diag_2019[,age:= as.numeric(difftime(as.Date(admissiondate), as.Date(PatientDoB), units="days"))/365.25]
diag_2019[, age:= round(age, digits=0)]
diag_2019[,age_cat:=cut(age,
breaks = c(0,20,30,40,50,60,100)
,include.lowest=T)]
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
decripdiag_2019 <- diag_2019[id_within_baradmission==1]
nrow(decripdiag_2019)
xtabs(~decripdiag_2019$age_cat)
xtabs(~diag_2019$id_within_baradmission)
nrow(diag_2019)
d2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(d2019)
d2019
xtabs(~diag_2019$id_within_baradmission)
nrow(diag_2019)
d2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(d2019)
labd2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(labd2019)
obs2019 <- merge(diag_2019, obs_2019, by=c("BARADMISSIONID", "Medical Order Id"))
obs2019
nrow(obs2019)
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
nrow(dru2019)
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
diag_2019 <- diag_2019[id_within_baradmission==1]
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
nrow(dru2019)
dru2019
dru2019[BARADMISSIONID == 2001307447169]
nrow(diag_2019)
# creating folders, SHARED it is an argument to the function org::InitialiseProject
#shared ....it will create a folder inside with a date
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
library(data.table)
library(gmodels)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
# diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
# diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
# diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
# drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
# drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
# drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
# lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
# lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
# lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
# obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
# obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
# obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels 2019 database and creating new attributes
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
#View(diag_2019)
#some data cleaning &  some decriptive analysis
xtabs(~diag_2019$`Patient DoB`)
#how to creat age variable from date of birth
#unique(diag_2019$Patient DoB`
#d[, age := as.numeric(difftime(as.Date("2019-01-01"), as.Date(date_of_birth), units="days"))/365.25]
unique(diag_2019$`Patient DoB`)
diag_2019[,PatientDoB:=as.Date(`Patient DoB`, format="%d-%m-%Y")]
diag_2019[,admissiondate:=as.Date(`Admission Date`, format="%d-%m-%Y")]
diag_2019[,age:= as.numeric(difftime(as.Date(admissiondate), as.Date(PatientDoB), units="days"))/365.25]
diag_2019[, age:= round(age, digits=0)]
diag_2019[,age_cat:=cut(age,
breaks = c(0,20,30,40,50,60,100)
,include.lowest=T)]
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
decripdiag_2019 <- diag_2019[id_within_baradmission==1]
nrow(decripdiag_2019)
setDT(decripdiag_2019)
nrow(diag_2019)
xtabs(~decripdiag_2019$`Patient Sex`)
xtabs(~decripdiag_2019$`Marital Status`)
xtabs(~decripdiag_2019$age_cat)
org<-xtabs(~decripdiag_2019$Organization)
openxlsx :: write.xlsx(org,
file.path(org::PROJ$SHARED_TODAY,"2019organization.xlsx"))
xtabs(~decripdiag_2019$`Admission Status`)
xtabs(~decripdiag_2019$`Admission Hosp/Dept Name`)
departments <- unique(decripdiag_2019$`Admission Hosp/Dept Name`)
openxlsx :: write.xlsx(departments,
file.path(org::PROJ$SHARED_TODAY,"2019depatrment.xlsx"))
xtabs(~decripdiag_2019$`Medical Order Note`)
unique(drug_2019$NAME)
drugs <- xtabs(~drug_2019$NAME)
openxlsx :: write.xlsx(drugs,
file.path(org::PROJ$SHARED_TODAY,"2019drugs.xlsx"))
labtests <- xtabs(~lab_2019$`Labtest Name`)
openxlsx :: write.xlsx(labtests,
file.path(org::PROJ$SHARED_TODAY,"2019labtests.xlsx"))
#creat new variable age in prescdiag2019
View(diag_2019)
names(diag_2019)
dim(diag_2019)
str(diag_2019)
unique(diag_2019$`Diagnose Name`)
tam <- xtabs(~decripdiag_2019$'Diagnose Name')
#file.path(org::PROJ$DATA_RAW,"2019.xlsx")
#use SHARED TODAY FOR RESULTS
openxlsx :: write.xlsx(tam,
file.path(org::PROJ$SHARED_TODAY,"2019diagnosis.xlsx"))
barplot(tam, main="Diagnosis Distribution",
xlab="Number of cases")
counts <- table(diag_2019$'Diagnose Name')
library(gmodels)
tamm <- CrossTable (diag_2019$`Diagnose Name`,diag_2019$Organization,addNA=T)
openxlsx :: write.xlsx(tamm,
file.path(org::PROJ$SHARED_TODAY,"2019cross.xlsx"))
unique(decripdiag_2019$`Diagnose Name`)
decripdiag_2019$`Diagnose Name`
decripdiag_2019 [`Diagnose Name`%in% c("Type 2 diabetes mellitus"	,
"Type 2 diabetes mellitus with circulatory complications",
"Type 2 diabetes mellitus with diabetic arthropathy",
"Type 2 diabetes mellitus with diabetic cataract",
"Type 2 diabetes mellitus with diabetic chronic kidney disease",
"Type 2 diabetes mellitus with diabetic dermatitis",
"Type 2 diabetes mellitus with diabetic nephropathy",
"Type 2 diabetes mellitus with diabetic neuropathic arthropathy",
"Type 2 diabetes mellitus with diabetic neuropathy, unspecified"	,
"Type 2 diabetes mellitus with diabetic peripheral angiopathy with gangrene",
"Type 2 diabetes mellitus with diabetic peripheral angiopathy without gangrene",
"Type 2 diabetes mellitus with diabetic polyneuropathy",
"Type 2 diabetes mellitus with foot ulcer",
"Type 2 diabetes mellitus with hyperglycemia",
"Type 2 diabetes mellitus with hyperosmolarity"	,
"Type 2 diabetes mellitus with hyperosmolarity with coma",
"Type 2 diabetes mellitus with hyperosmolarity without nonketotic hyperglycemic-hyperosmolar coma (NKHHC)"	,
"Type 2 diabetes mellitus with hypoglycemia",
"Type 2 diabetes mellitus with hypoglycemia with coma"	,
"Type 2 diabetes mellitus with hypoglycemia without coma"	,
"Type 2 diabetes mellitus with kidney complications"	,
"Type 2 diabetes mellitus with mild nonproliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with moderate nonproliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with neurological complications"	,
"Type 2 diabetes mellitus with ophthalmic complications"	,
"Type 2 diabetes mellitus with other circulatory complications"	,
"Type 2 diabetes mellitus with other diabetic arthropathy"	,
"Type 2 diabetes mellitus with other diabetic kidney complication"	,
"Type 2 diabetes mellitus with other diabetic neurological complication"	,
"Type 2 diabetes mellitus with other diabetic ophthalmic complication"	,
"Type 2 diabetes mellitus with other oral complications"	,
"Type 2 diabetes mellitus with other skin complications"	,
"Type 2 diabetes mellitus with other skin ulcer"	,
"Type 2 diabetes mellitus with other specified complication"	,
"Type 2 diabetes mellitus with other specified complications"	,
"Type 2 diabetes mellitus with proliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with severe nonproliferative diabetic retinopathy without macular edema"	,
"Type 2 diabetes mellitus with skin complications"	,
"Type 2 diabetes mellitus with unspecified complications"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy with macular edema"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy without macular edema"	,
"Type 2 diabetes mellitus without complications"	)
,DMM2:=T]
xtabs(~decripdiag_2019$DMM2)
tamdm <- CrossTable (decripdiag_2019$Organization,decripdiag_2019$DMM2,addNA=T)
openxlsx :: write.xlsx(tamdm,
file.path(org::PROJ$SHARED_TODAY,"2019DM.xlsx"))
tamdmage <- CrossTable (decripdiag_2019$age_cat,decripdiag_2019$DMM2,addNA=T)
openxlsx :: write.xlsx(tamdmage,
file.path(org::PROJ$SHARED_TODAY,"2019DMage.xlsx"))
tamdmsex <- CrossTable (decripdiag_2019$`Patient Sex`,decripdiag_2019$DMM2,addNA=T)
openxlsx :: write.xlsx(tamdmsex,
file.path(org::PROJ$SHARED_TODAY,"2019DMsex.xlsx"))
tamdmmar <- CrossTable (decripdiag_2019$`Marital Status`,decripdiag_2019$DMM2,addNA=T)
openxlsx :: write.xlsx(tamdmmar,
file.path(org::PROJ$SHARED_TODAY,"2019DMmar.xlsx"))
decripdiag_2019[Organization%in% c("Ramallah PHC",
"Nablus PHC",
"Azzoun Clinic",
"Al Karantina Clinic",
"Tarqumia Clinic",
"Qalqilia PHC",
" مركز محمد بن راشد آل مكتوم / مديرية صحة نابلس",
"مركز الأمراض المزمنة و الجلدية")
,ident_clinic:=T]
table2 <- decripdiag_2019[DMM2==T & ident_clinic==T,
.(
N=.N
),
keyby=
.(`Patient Sex`,
age_cat,
`Marital Status`
)]
openxlsx :: write.xlsx(table2,
file.path(org::PROJ$SHARED_TODAY,"2019DM2.xlsx"))
diag_2019 [`Diagnose Name`%in% c("Type 2 diabetes mellitus"	,
"Type 2 diabetes mellitus with circulatory complications",
"Type 2 diabetes mellitus with diabetic arthropathy",
"Type 2 diabetes mellitus with diabetic cataract",
"Type 2 diabetes mellitus with diabetic chronic kidney disease",
"Type 2 diabetes mellitus with diabetic dermatitis",
"Type 2 diabetes mellitus with diabetic nephropathy",
"Type 2 diabetes mellitus with diabetic neuropathic arthropathy",
"Type 2 diabetes mellitus with diabetic neuropathy, unspecified"	,
"Type 2 diabetes mellitus with diabetic peripheral angiopathy with gangrene",
"Type 2 diabetes mellitus with diabetic peripheral angiopathy without gangrene",
"Type 2 diabetes mellitus with diabetic polyneuropathy",
"Type 2 diabetes mellitus with foot ulcer",
"Type 2 diabetes mellitus with hyperglycemia",
"Type 2 diabetes mellitus with hyperosmolarity"	,
"Type 2 diabetes mellitus with hyperosmolarity with coma",
"Type 2 diabetes mellitus with hyperosmolarity without nonketotic hyperglycemic-hyperosmolar coma (NKHHC)"	,
"Type 2 diabetes mellitus with hypoglycemia",
"Type 2 diabetes mellitus with hypoglycemia with coma"	,
"Type 2 diabetes mellitus with hypoglycemia without coma"	,
"Type 2 diabetes mellitus with kidney complications"	,
"Type 2 diabetes mellitus with mild nonproliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with moderate nonproliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with neurological complications"	,
"Type 2 diabetes mellitus with ophthalmic complications"	,
"Type 2 diabetes mellitus with other circulatory complications"	,
"Type 2 diabetes mellitus with other diabetic arthropathy"	,
"Type 2 diabetes mellitus with other diabetic kidney complication"	,
"Type 2 diabetes mellitus with other diabetic neurological complication"	,
"Type 2 diabetes mellitus with other diabetic ophthalmic complication"	,
"Type 2 diabetes mellitus with other oral complications"	,
"Type 2 diabetes mellitus with other skin complications"	,
"Type 2 diabetes mellitus with other skin ulcer"	,
"Type 2 diabetes mellitus with other specified complication"	,
"Type 2 diabetes mellitus with other specified complications"	,
"Type 2 diabetes mellitus with proliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with severe nonproliferative diabetic retinopathy without macular edema"	,
"Type 2 diabetes mellitus with skin complications"	,
"Type 2 diabetes mellitus with unspecified complications"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy with macular edema"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy without macular edema"	,
"Type 2 diabetes mellitus without complications"	)
,DM2:=T]
xtabs(~diag_2019$DM2)
xtabs(~decripdiag_2019$ident_clinic)
# #table <- diag_2019[,
#
#               .(
#                 N=.N,
#
#                 DM=sum(`Medical Order Id`,na.rm = T)
#                 ),
#
#               keyby=
#               .(Organization
#
#               )]
#merging data sets 2019
#to do check on duplicated cases ...
#d[question, assignment, group/by]
#diag_2019[BARADMISSIONID == 2001307447169]
# we need to merge diag and lab by bara &medical order id
#then merge with obs by bara,medical, and admition date
#then with drugs by bara  ....more than one drug
xtabs(~diag_2019$id_within_baradmission)
#diag_2019 <- diag_2019[id_within_baradmission==1]
nrow(diag_2019)
labd2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(labd2019)
obs2019 <- merge(diag_2019, obs_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(obs2019)
diag_2019 <- diag_2019[id_within_baradmission==1]
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
nrow(dru2019)
dru2019[BARADMISSIONID == 2001307447169]
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(diag_2018)
diag_2018[,ident_diag:=TRUE]
nrow(decripdiag_2019)
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
diag_2018[,PatientDoB:=as.Date(`Patient DoB`, format="%d-%m-%Y")]
diag_2018[,admissiondate:=as.Date(`Admission Date`, format="%d-%m-%Y")]
diag_2018[,age:= as.numeric(difftime(as.Date(admissiondate), as.Date(PatientDoB), units="days"))/365.25]
diag_2018[, age:= round(age, digits=0)]
diag_2018[,age_cat:=cut(age,
breaks = c(0,20,30,40,50,60,100)
,include.lowest=T)]
diag_2018[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2018$id_within_baradmission)
decripdiag_2018 <- diag_2018[id_within_baradmission==1]
nrow(decripdiag_2018)
setDT(decripdiag_2018)
nrow(diag_2018)
diagnosedm8 <- xtabs(~decripdiag_2018$`Diagnose Name`)
openxlsx :: write.xlsx(diagnosedm8,
file.path(org::PROJ$SHARED_TODAY,"2018diagnosis.xlsx"))
decripdiag_2018 [`Diagnose Name`%in% c("Type 2 diabetes mellitus"	,
"Type 2 diabetes mellitus with circulatory complications",
"Type 2 diabetes mellitus with diabetic arthropathy",
"Type 2 diabetes mellitus with diabetic cataract",
"Type 2 diabetes mellitus with diabetic chronic kidney disease",
"Type 2 diabetes mellitus with diabetic dermatitis",
"Type 2 diabetes mellitus with diabetic nephropathy",
"Type 2 diabetes mellitus with diabetic neuropathic arthropathy",
"Type 2 diabetes mellitus with diabetic neuropathy, unspecified"	,
"Type 2 diabetes mellitus with diabetic peripheral angiopathy with gangrene",
"Type 2 diabetes mellitus with diabetic peripheral angiopathy without gangrene",
"Type 2 diabetes mellitus with diabetic polyneuropathy",
"Type 2 diabetes mellitus with foot ulcer",
"Type 2 diabetes mellitus with hyperglycemia",
"Type 2 diabetes mellitus with hyperosmolarity"	,
"Type 2 diabetes mellitus with hyperosmolarity with coma",
"Type 2 diabetes mellitus with hyperosmolarity without nonketotic hyperglycemic-hyperosmolar coma (NKHHC)"	,
"Type 2 diabetes mellitus with hypoglycemia",
"Type 2 diabetes mellitus with hypoglycemia with coma"	,
"Type 2 diabetes mellitus with hypoglycemia without coma"	,
"Type 2 diabetes mellitus with kidney complications"	,
"Type 2 diabetes mellitus with mild nonproliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with moderate nonproliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with neurological complications"	,
"Type 2 diabetes mellitus with ophthalmic complications"	,
"Type 2 diabetes mellitus with other circulatory complications"	,
"Type 2 diabetes mellitus with other diabetic arthropathy"	,
"Type 2 diabetes mellitus with other diabetic kidney complication"	,
"Type 2 diabetes mellitus with other diabetic neurological complication"	,
"Type 2 diabetes mellitus with other diabetic ophthalmic complication"	,
"Type 2 diabetes mellitus with other oral complications"	,
"Type 2 diabetes mellitus with other skin complications"	,
"Type 2 diabetes mellitus with other skin ulcer"	,
"Type 2 diabetes mellitus with other specified complication"	,
"Type 2 diabetes mellitus with other specified complications"	,
"Type 2 diabetes mellitus with proliferative diabetic retinopathy"	,
"Type 2 diabetes mellitus with severe nonproliferative diabetic retinopathy without macular edema"	,
"Type 2 diabetes mellitus with skin complications"	,
"Type 2 diabetes mellitus with unspecified complications"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy with macular edema"	,
"Type 2 diabetes mellitus with unspecified diabetic retinopathy without macular edema"	,
"Type 2 diabetes mellitus without complications"	)
,DMM2:=T]
organdm8 <- xtabs(~decripdiag_2018$Organization)
openxlsx :: write.xlsx(organdm8,
file.path(org::PROJ$SHARED_TODAY,"2018organization.xlsx"))
decripdiag_2018[Organization%in% c("Ramallah PHC",
"Nablus PHC",
"Azzoun Clinic",
"Al Karantina Clinic",
"Tarqumia Clinic",
"Qalqilia PHC",
" مركز محمد بن راشد آل مكتوم / مديرية صحة نابلس",
"مركز الأمراض المزمنة و الجلدية")
,ident_clinic:=T]
table8 <- decripdiag_2018[DMM2==T & ident_clinic==T,
.(
N=.N
),
keyby=
.(`Patient Sex`,
age_cat,
`Marital Status`
)]
openxlsx :: write.xlsx(table8,
file.path(org::PROJ$SHARED_TODAY,"2018DM2.xlsx"))
#for each clinic in 2018
tableR<- decripdiag_2018[DMM2==T & Organization=="Ramallah PHC",
.(
N=.N
),
keyby=
.(`Patient Sex`,
age_cat,
`Marital Status`
)]
openxlsx :: write.xlsx(tableR,
file.path(org::PROJ$SHARED_TODAY,"2018DM2RAMALLA.xlsx"))
organdm8 <- xtabs(~decripdiag_2018$Organization)
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
