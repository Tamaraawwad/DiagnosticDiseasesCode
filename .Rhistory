#HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
#HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
RESULTS= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
#HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
RESULTS= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
#HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
RESULTS= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
RESULTS= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
RESULTS= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
# creating folders
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
RESULTS= "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
# creating folders, SHARED it is an argument to the function org::InitialiseProject
#shared ....it will create a folder inside with a date
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
View(diag_2019)
names(diag_2019)
dim(diag_2019)
str(diag_2019)
unique(diag_2019$`Diagnose Name`)
unique(diag_2019$`Diagnose Name`)
tam <- xtabs(~ diag_2019$'Diagnose Name')
openxlsx :: write.xlsx(tam,
file.path("C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results",
"diagnostic.xlsx"))
openxlsx :: write.xlsx(tam,
file.path(org::PROJ$SHARED,"2019.xlsx"))
openxlsx :: write.xlsx(tam,
file.path(org::PROJ$SHARED_TODAY,"2019.xlsx"))
chisq.test(tam)
barplot(tam, main="Diagnosis Distribution",
xlab="Number of cases")
counts <- table(diag_2019$'Diagnose Name')
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
counts
tam2 <- CrossTable (diag_2019$`Diagnose Name`,diag_2019$Organization,addNA=T)
tam2 <- CrossTable (diag_2019$`Diagnose Name`,diag_2019$Organization,addNA=T)
library(gmodels)
tam2 <- CrossTable (diag_2019$`Diagnose Name`,diag_2019$Organization,addNA=T)
openxlsx :: write.xlsx(tam2,
file.path(org::PROJ$SHARED_TODAY,"2019cross.xlsx"))
chisq.test(tam2)
tamm <- CrossTable (diag_2019$`Diagnose Name`,diag_2019$Organization,addNA=T)
chisq.test(tamm)
d2019 <- merge(diag_2019, drugs_2019, obs_2019, lab_2019, by="BARADMISSIONID")
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
View(diag_2019)
names(diag_2019)
dim(diag_2019)
str(diag_2019)
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag data" ,"2019.xlsx"))
drugs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs data" ,"2019.xlsx"))
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
d2019 <- merge(diag_2019, drugs_2019, obs_2019, lab_2019, by="BARADMISSIONID")
d2019 <- merge(diag_2019, drugs_2019, by="BARADMISSIONID")
d2019
nrow(diag_2019)
nrow(drugs_2019)
nrow(d2019)
d2019 <- merge(diag_2019, obs_2019, by="BARADMISSIONID")
nrow(d2019)
d2019 <- merge(d2019, lab_2019, by="BARADMISSIONID")
nrow(d2019)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels
library(data.table)
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
#to do merging by one variable
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
diag_2019 <- diag_2019[id_within_baradmission==1]
diag_2019
d2019 <- merge(diag_2019, lab_2019, by="BARADMISSIONID")
d2019
nrow(d2019)
xtabs(~d2019$`Medical Order Id.x`)
xtabs(~d2019$`Medical Order Id.y`)
d2019 <- merge(diag_2019, lab_2019, by="Medical Order Id.y")
# creating folders, SHARED it is an argument to the function org::InitialiseProject
#shared ....it will create a folder inside with a date
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels
library(data.table)
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
#to do merging by one variable
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
diag_2019 <- diag_2019[id_within_baradmission==1]
#to do check on duplicated cases ...d[question, assignment, group/by]
#diag_2019[BARADMISSIONID == 2001307447169]
nrow(diag_2019)
d2019 <- merge(diag_2019, lab_2019, by="Medical Order Id")
nrow(d2019)
d2019 <- merge(diag_2019, lab_2019, by="BARADMISSIONID")
nrow(d2019)
chisqmarital <- xtabs(~diag_2019$`Marital Status`)
chisqmarital
# creating folders, SHARED it is an argument to the function org::InitialiseProject
#shared ....it will create a folder inside with a date
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
# diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
# diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
# diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
# drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
# drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
# drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
# lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
# lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
# lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
# obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
# obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
# obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels 2019 database
library(data.table)
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
#to do merging by one variable
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
diag_2019 <- diag_2019[id_within_baradmission==1]
nrow(diag_2019)
# creating folders, SHARED it is an argument to the function org::InitialiseProject
#shared ....it will create a folder inside with a date
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
# diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
# diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
# diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
# drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
# drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
# drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
# lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
# lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
# lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
# obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
# obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
# obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels 2019 database
library(data.table)
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
#some data cleaning:
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
diag_2019 <- diag_2019[id_within_baradmission==1]
nrow(diag_2019)
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
nrow(diag_2019)
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
nrow(diag_2019)
decripdiag_2019 <- diag_2019[id_within_baradmission==1]
nrow(decripdiag_2019)
xtabs(~decripdiag_2019$`Patient Sex`)
xtabs(~decripdiag_2019$`Marital Status`)
xtabs(~decripdiag_2019$Organization)
org<-xtabs(~decripdiag_2019$Organization)
openxlsx :: write.xlsx(org,
file.path(org::PROJ$SHARED_TODAY,"2019organization.xlsx"))
xtabs(~decripdiag_2019$`Admission Status`)
xtabs(~decripdiag_2019$`Admission Hosp/Dept Name`)
org/depar <- CrossTable (decripdiag_2019$Organization,decripdiag_2019$`Admission Hosp/Dept Name`,addNA=T)
library(gmodels)
org/depar <- CrossTable (decripdiag_2019$Organization,decripdiag_2019$`Admission Hosp/Dept Name`,addNA=T)
xtabs(~decripdiag_2019$`Admission Hosp/Dept Name`)
unique(decripdiag_2019$`Admission Hosp/Dept Name`)
name(unique(decripdiag_2019$`Admission Hosp/Dept Name`))
names(unique(decripdiag_2019$`Admission Hosp/Dept Name`))
departments<- unique(decripdiag_2019$`Admission Hosp/Dept Name`))
departments <- unique(decripdiag_2019$`Admission Hosp/Dept Name`)
openxlsx :: write.xlsx(departments,
file.path(org::PROJ$SHARED_TODAY,"2019depatrment.xlsx"))
xtabs(~decripdiag_2019$`Admission Type`)
xtabs(~decripdiag_2019$`Medical Order Module`)
xtabs(~decripdiag_2019$`Admission Type`)
xtabs(~decripdiag_2019$`Diagnose Type`)
xtabs(~decripdiag_2019$`Medical Order Note`)
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(`Patient DoB`), units="days"))/365.25]
diag_2019
unique(diag_2019$`Patient DoB`)
diag_2019[,PatientDoB:=as.Date(`Patient DoB`, format="%d-%m-%Y")]
diag_2019[,admissiondate:=as.Date(`Admission Date`, format="%d-%m-%Y")]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(), units="days"))/365.25]
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365.25]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365.25, digits=0]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date("2019-01-01"), as.Date(PatientDoB), units="days"))/365.25, round(age,0)]
diag_2019
diag_2019[, age:= round(age, digits=0)]
diag_2019
diag_2019[,age:= as.numeric(difftime(as.Date(admissiondate), as.Date(PatientDoB), units="days"))/365.25]
diag_2019[, age:= round(age, digits=0)]
diag_2019
diag_2019[,age_cat:=cut(age,
include.lowest=T)]
diag_2019[,age_cat:=cut(age,
breaks = c(0,20,30,40,50,60,100)
,include.lowest=T)]
diag_2019
xtabs(~diag_2019$age_cat)
xtabs(~decripdiag_2019$age_cat)
org::AllowFileManipulationFromInitialiseProject()
org::InitialiseProject(
HOME = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/DiagnosticDiseasesCode",
DATA_RAW = "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/data_raw",
SHARED =  "C:/Users/enasa/OneDrive/Documents/Diagnostic diseases/results"
)
library(readxl)
library(openxlsx)
library(data.table)
library(gmodels)
#in general if I want to take a quick view on any data, i can work on data frame
# and do some xtabs and crosstabs, chisquare
# to create a new variable in ....data.frame:
#   data$variable <- 3
# data.table:
#   data[,variable:=3]
#creating vectors for data raw
#DIAGNOSTIC DATA
diag_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2019.xlsx"))
# diag_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2018.xlsx"))
# diag_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2017.xlsx"))
# diag_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Diag Data" ,"2016.xlsx"))
# Drugs Data
drug_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2019.xlsx"))
# drug_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2018.xlsx"))
# drug_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2017.xlsx"))
# drug_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Drugs Data" ,"2016.xlsx"))
#Lab Data
lab_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2019.xlsx"))
# lab_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2018.xlsx"))
# lab_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2017.xlsx"))
# lab_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "Lab Data" ,"2016.xlsx"))
#Observation Data
obs_2019 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2019.xlsx"))
# obs_2018 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2018.xlsx"))
# obs_2017 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2017.xlsx"))
# obs_2016 <- read_excel(file.path(org::PROJ$DATA_RAW, "observation Data" ,"2016.xlsx"))
# transform to data tabels 2019 database
setDT(diag_2019)
diag_2019[,ident_diag:=TRUE]
setDT(drug_2019)
drug_2019[,ident_drug:=TRUE]
setDT(lab_2019)
lab_2019[,ident_lab:=TRUE]
setDT(obs_2019)
obs_2019[,ident_obs:=TRUE]
diag_2019[,PatientDoB:=as.Date(`Patient DoB`, format="%d-%m-%Y")]
diag_2019[,admissiondate:=as.Date(`Admission Date`, format="%d-%m-%Y")]
diag_2019[,age:= as.numeric(difftime(as.Date(admissiondate), as.Date(PatientDoB), units="days"))/365.25]
diag_2019[, age:= round(age, digits=0)]
diag_2019[,age_cat:=cut(age,
breaks = c(0,20,30,40,50,60,100)
,include.lowest=T)]
diag_2019[,id_within_baradmission:=1:.N,by=BARADMISSIONID]
xtabs(~diag_2019$id_within_baradmission)
decripdiag_2019 <- diag_2019[id_within_baradmission==1]
nrow(decripdiag_2019)
xtabs(~decripdiag_2019$age_cat)
xtabs(~diag_2019$id_within_baradmission)
nrow(diag_2019)
d2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(d2019)
d2019
xtabs(~diag_2019$id_within_baradmission)
nrow(diag_2019)
d2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(d2019)
labd2019 <- merge(diag_2019, lab_2019, by=c("BARADMISSIONID", "Medical Order Id"))
nrow(labd2019)
obs2019 <- merge(diag_2019, obs_2019, by=c("BARADMISSIONID", "Medical Order Id"))
obs2019
nrow(obs2019)
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
nrow(dru2019)
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
diag_2019 <- diag_2019[id_within_baradmission==1]
dru2019 <- merge(diag_2019, drug_2019, by="BARADMISSIONID")
nrow(dru2019)
dru2019
dru2019[BARADMISSIONID == 2001307447169]
nrow(diag_2019)
